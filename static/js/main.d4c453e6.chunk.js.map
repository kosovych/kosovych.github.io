{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["setTime","targetTime","Date","getTime","nowTime","now","_seconds","Math","floor","days","hours","minutes","seconds","padStart","App","useState","date","setDate","visible","setVisible","useEffect","id","setTimeout","clearTimeout","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAGMA,EAAU,WACd,IACMC,EADa,IAAIC,KAAK,cACEC,UACxBC,EAAUF,KAAKG,MACfC,EAAWC,KAAKC,OAAOP,EAAaG,GAAW,KAC/CK,EAAOF,KAAKC,MAAMF,EAAW,OAC7BI,EAAQH,KAAKC,OAAOF,EAAkB,MAAPG,GAAgB,MAC/CE,EAAUJ,KAAKC,OAAOF,EAAmB,KAARI,EAAsB,MAAPD,GAAgB,IAChEG,EAAUN,EAAqB,GAAVK,EAAuB,KAARD,EAAsB,MAAPD,EAEzD,MAAO,CACLE,QAAS,UAAGA,GAAUE,SAAS,EAAG,KAClCH,MAAO,UAAGA,GAAQG,SAAS,EAAG,KAC9BJ,KAAM,UAAGA,GAAOI,SAAS,EAAG,KAC5BD,QAAS,UAAGA,GAAUC,SAAS,EAAG,OA6CvBC,MAzCf,WAAgB,IAAD,EACWC,mBAASf,KADpB,mBACNgB,EADM,KACAC,EADA,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KAab,OATAC,qBAAU,WACR,IAAMC,EAAKC,YAAW,WACpBL,EAAQjB,KACRmB,GAAYD,KACX,KACH,OAAO,WACLK,aAAaF,OAIf,sBAAKG,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,wJACA,sBAAKA,UAAU,QAAf,UACE,uBAAMA,UAAU,YAAhB,UACE,sBAAMA,UAAU,cAAhB,SAA+BR,EAAKP,OACpC,sBAAMe,UAAU,cAAhB,qBAHJ,IAME,uBAAMA,UAAU,aAAhB,UACE,sBAAMA,UAAU,cAAhB,SAA+BR,EAAKN,QACpC,sBAAMc,UAAU,cAAhB,sBARJ,IAWE,uBAAMA,UAAU,aAAhB,UACE,sBAAMA,UAAU,cAAhB,SAA+BR,EAAKL,UACpC,sBAAMa,UAAU,cAAhB,wBAbJ,IAgBE,uBAAMA,UAAU,eAAhB,UACE,sBAAMA,UAAU,cAAhB,SAA+BR,EAAKJ,UACpC,sBAAMY,UAAU,cAAhB,+BC3CKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d4c453e6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst setTime = () => {\n  const targetDate = new Date('09-25-2021');\n  const targetTime = targetDate.getTime();\n  const nowTime = Date.now();\n  const _seconds = Math.floor((targetTime - nowTime) / 1000);\n  const days = Math.floor(_seconds / 86400);\n  const hours = Math.floor((_seconds - days * 86400) / 3600);\n  const minutes = Math.floor((_seconds - hours * 3600 - days * 86400) / 60);\n  const seconds = _seconds - minutes * 60 - hours * 3600 - days * 86400;\n  \n  return {\n    minutes: `${minutes}`.padStart(2, '0'),\n    hours: `${hours}`.padStart(2, '0'),\n    days: `${days}`.padStart(2, '0'),\n    seconds: `${seconds}`.padStart(2, '0'),\n  }\n}\n\nfunction App() {\n  const [date, setDate] = useState(setTime());\n  const [visible, setVisible] = useState(true)\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      setDate(setTime())\n      setVisible(!visible);\n    }, 1000);\n    return () => {\n      clearTimeout(id);\n    }\n  })\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"title\">🎊🥂💍👩‍❤️‍💋‍👨💍🥂🎊</h1>\n      <div className=\"timer\">\n        <span className=\"time days\">\n          <span className=\"time__value\">{date.days}</span>\n          <span className=\"time__title\">Days</span>\n        </span>\n        :\n        <span className=\"time hours\">\n          <span className=\"time__value\">{date.hours}</span>\n          <span className=\"time__title\">Hours</span>\n        </span>\n        :\n        <span className=\"time hours\">\n          <span className=\"time__value\">{date.minutes}</span>\n          <span className=\"time__title\">Minutes</span>\n        </span>\n        :\n        <span className=\"time seconds\">\n          <span className=\"time__value\">{date.seconds}</span>\n          <span className=\"time__title\">Seconds</span>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}